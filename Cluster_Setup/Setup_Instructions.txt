Apache Nifi Cluster Setup with Embedded Zookeeper
-----------------------------------------------
#Setup 3 nodes that can ping each other, SSH (password less) each other, firewall disabled 
(sudo ufw disable) and able to ping external world.

#Steps for all 3 nodes
--older stable version
#Download apache nifi 1.9.2 from https://nifi.apache.org/download.html
#[Releases>1.9.2>Binaries>nifi-1.9.2-bin.tar.gz]

--newer stable version
#Download apache nifi 1.23.2 from https://nifi.apache.org/download.html
or from archive.apache.org > nifi-1.23.2-bin.zip


#in my case the downloads are in /home/hdu/Downloads

[hdu@ch1 ~]$ ls Downloads/nifi*
Downloads/nifi-1.23.2-bin.zip             Downloads/nifi-registry-1.23.2-bin.zip
Downloads/nifi-1.23.2-source-release.zip  Downloads/nifi-toolkit-1.23.2-bin.zip

cd /usr/local
#sudo tar -xvf /home/nif/Downloads/nifi-1.9.2-bin.tar.gz
sudo unzip /home/hdu/Downloads/nifi-1.23.2-bin.zip
#sudo ln -s nifi-1.9.2/ nifi
sudo ln -s nifi-1.23.2 nifi
sudo chown -R hdu:hdu nifi*
cd

#In home directory ie /home/nif update .bashrc
vi .bashrc
export JAVA_HOME=/usr/lib/jvm/jdk1.8.0_221
export PATH=$PATH:$JAVA_HOME/bin
export NIFI_HOME=/usr/local/nifi
export PATH=$PATH:$NIFI_HOME/bin
#refresh .bashrc
source .bashrc

#Nifi config files need to be updated for cluster setup & update hostnames as per machines
#copy & replace Apache_Nifi/Cluster_Setup/conf-Node1/conf to /usr/local/nifi/
#copy & replace Apache_Nifi/Cluster_Setup/conf-Node2/conf to /usr/local/nifi/
#copy & replace Apache_Nifi/Cluster_Setup/conf-Node3/conf to /usr/local/nifi/

For example:
cp -r /home/nif/Downloads/ApacheNifi-main/Cluster_Setup/conf-Node1/conf /usr/local/nifi/
scp -r /home/nif/Downloads/ApacheNifi-main/Cluster_Setup/conf-Node2/conf nif@n2:/usr/local/nifi/
scp -r /home/nif/Downloads/ApacheNifi-main/Cluster_Setup/conf-Node3/conf nif@n3:/usr/local/nifi/

#Now look into "nifi.properties" & "zookeeper.properties"

#Remember to change hostnames in config files as per your own setup
#for example in each of these above mentioned config files, replace the hostname n1/n2/n3 with your hostname and desired ports.
#on each node
cd /usr/local/nifi
mkdir state
mkdir state/zookeeper

#on node1
echo 1 > state/zookeeper/myid
#on node2
echo 2 > state/zookeeper/myid
#on node3
echo 3 > state/zookeeper/myid

#starting Nifi instances
#Node 1 (from home directory)
nifi.sh start
#Node 2 (from home directory)
nifi.sh start
#Node 3 (from home directory)
nifi.sh start

#on each node,type -- jps
#Does it show nifi processes?

#on each node
cat /usr/local/nifi/logs/nifi-app.log
#check if cluster is being initiated, heartbeats are being sent etc..

#on Node1 open browser
http://n1:8080
#similarly on other nodes
http://n2:8080
http://n3:8080

#look if number of nodes shows as 3 in top left corner
#if yes cluster is setup

#from top right corner, from dropdown menu select cluster..

**IN NEWER VERSION (1.23.x)
--from command line
nifi.sh set-sensitive-properties-key Summer@12winter
--check if property was updated in nifi.properties

--some other properties updated
nifi.cluster.protocol.is.secure=true
#nifi.web.http.host=ch1
#nifi.web.http.port=8080
nifi.web.https.host=ch1
nifi.web.https.port=8443


--also check state-management.xml ,it it has right updates of zk-provider.
for example:
<cluster-provider>
        <id>zk-provider</id>
        <class>org.apache.nifi.controller.state.providers.zookeeper.ZooKeeperStateProvider</class>
        <property name="Connect String">ch1:2181</property>
        <property name="Root Node">/nifi</property>
        <property name="Session Timeout">10 seconds</property>
        <property name="Access Control">Open</property>
    </cluster-provider>

also update login-identity-providers.xml 
<provider>
    <identifier>single-user-provider</identifier>
    <class>org.apache.nifi.authentication.single.user.SingleUserLoginIdentityProvider</class>
    <property name="Username"></property>
    <property name="Password"></property>
</provider>

then start nifi.sh in all nodes..

for nifi username and pswd
cat /usr/local/nifi/logs/nifi-app.log | grep 'Generated Username'
cat /usr/local/nifi/logs/nifi-app.log | grep 'Generated Password'


